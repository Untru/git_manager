#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ИнициализироватьФорму();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	УстановитьСсылкуSonar();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьИзBitrix(Команда)
	ОбновитьИзBitrixНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПодборОбработок(Команда)

	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Владелец", Объект.Владелец);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", ПараметрыОтбора);
	ПараметрыФормы.Вставить("РежимВыбора",Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор",Истина);
	
	ОбработкаВыбора = Новый ОписаниеОповещения("ПриЗакрытииПодборОбработок", ЭтотОбъект, "Подбор");
	ОткрытьФорму("Справочник.ОбъектыРазработки.ФормаВыбора", ПараметрыФормы, ЭтотОбъект, , , , ОбработкаВыбора);

КонецПроцедуры

&НаКлиенте
Процедура СсылкаBitrixНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПерейтиПоНавигационнойСсылке(Объект.СсылкаBitrix);
КонецПроцедуры

&НаКлиенте
Процедура СсылкаSonarНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПерейтиПоНавигационнойСсылке(СсылкаSonar);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьИзBitrixНаСервере()
	
	НастройкиПользователя = Справочники.НастройкиПользователей.НастройкиТекущегоПользователя();
	ЗадачаОбъект = РеквизитФормыВЗначение("Объект");
	Справочники.Задачи.ЗаполнитьДанныеЗадачи(ЗадачаОбъект, НастройкиПользователя, Неопределено, Истина);
	ЗначениеВРеквизитФормы(ЗадачаОбъект, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытииПодборОбработок(Значение, ДопПараметры) Экспорт
	
	Если Значение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Элемент Из Значение Цикл
		НайденныеСтроки = Объект.ВнешниеФайлы.НайтиСтроки(Новый Структура("Обработка", Элемент));
		Если Не НайденныеСтроки.Количество() Тогда
			НоваяСтрока = Объект.ВнешниеФайлы.Добавить();
			НоваяСтрока.Обработка = Элемент;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура НоваяОбработкаНаСервере(ИмяОбработки)
	
	//todo вынести в менеджер или модуль
	ПутьКШаблону = СтрШаблон("%1\Шаблоны\ШаблонОбработки.epf", НастройкиПользователя.КаталогРепозитория);
	ПутьКНовойОбработке =  СтрШаблон("%1\build\epf\%2.epf", НастройкиПользователя.КаталогРепозитория, ИмяОбработки);
	КопироватьФайл(ПутьКШаблону, ПутьКНовойОбработке);
	
	ОбработкаОбъект = Справочники.ОбъектыРазработки.СоздатьЭлемент();
	ОбработкаОбъект.УстановитьНовыйКод();
	ОбработкаОбъект.Владелец = НастройкиПользователя.Проект;
	ОбработкаОбъект.Наименование = ИмяОбработки;
	ОбработкаОбъект.ТипОбъектаРазработки = Перечисления.ТипыОбъектовРазработки.Обработка;
	ОбработкаОбъект.Версия = Формат(ТекущаяДатаСеанса(), "ДФ=yyyyMMdd");
	ОбработкаОбъект.Записать();

	Обработка = ОбработкаОбъект.Ссылка;
	
	СтрокаВнешнихФайлов = Объект.ВнешниеФайлы.Добавить();
	СтрокаВнешнихФайлов.Обработка = Обработка;
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура НоваяОбработка(Команда)
	
	НазваниеОбработки = "";
	
	Обещание = ВвестиСтрокуАсинх(НазваниеОбработки, НСтр("ru='Введите название обработки'"));
	ИмяОбработки = Ждать Обещание;
	Если ЗначениеЗаполнено(ИмяОбработки) Тогда
		НоваяОбработкаНаСервере(ИмяОбработки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОбработки(Команда)
	
	//todo Открывать шару
	ПутьКНовойОбработке = СтрШаблон("%1\build\epf", НастройкиПользователя.КаталогРепозиторияНаШаре);
	ЗапуститьПриложение(ПутьКНовойОбработке);
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьФорму()
	НастройкиПользователя = Справочники.НастройкиПользователей.НастройкиТекущегоПользователя();
КонецПроцедуры

&НаСервере
Процедура УстановитьСсылкуSonar()
	ШаблонСсылкиSonar = ШаблонСсылкиSonar();
	СсылкаSonar = СтрШаблон(ШаблонСсылкиSonar, Объект.ИмяВетки, Нрег(Объект.Владелец)); 	
КонецПроцедуры

&НаСервере
Функция ШаблонСсылкиSonar()
	Возврат "http://gitlabprojects.toolsworld.root.local:9000/dashboard?branch=feature/%1&id=%2";
КонецФункции

#КонецОбласти



